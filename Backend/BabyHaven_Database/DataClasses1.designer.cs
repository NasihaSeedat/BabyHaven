#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BabyHaven_Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoptiongroup(optiongroup instance);
    partial void Updateoptiongroup(optiongroup instance);
    partial void Deleteoptiongroup(optiongroup instance);
    partial void Insertoption(option instance);
    partial void Updateoption(option instance);
    partial void Deleteoption(option instance);
    partial void Insertorder(order instance);
    partial void Updateorder(order instance);
    partial void Deleteorder(order instance);
    partial void Insertproductcatogery(productcatogery instance);
    partial void Updateproductcatogery(productcatogery instance);
    partial void Deleteproductcatogery(productcatogery instance);
    partial void Insertproductoption(productoption instance);
    partial void Updateproductoption(productoption instance);
    partial void Deleteproductoption(productoption instance);
    partial void Insertproduct(product instance);
    partial void Updateproduct(product instance);
    partial void Deleteproduct(product instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<optiongroup> optiongroups
		{
			get
			{
				return this.GetTable<optiongroup>();
			}
		}
		
		public System.Data.Linq.Table<option> options
		{
			get
			{
				return this.GetTable<option>();
			}
		}
		
		public System.Data.Linq.Table<order> orders
		{
			get
			{
				return this.GetTable<order>();
			}
		}
		
		public System.Data.Linq.Table<productcatogery> productcatogeries
		{
			get
			{
				return this.GetTable<productcatogery>();
			}
		}
		
		public System.Data.Linq.Table<productoption> productoptions
		{
			get
			{
				return this.GetTable<productoption>();
			}
		}
		
		public System.Data.Linq.Table<product> products
		{
			get
			{
				return this.GetTable<product>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.optiongroups")]
	public partial class optiongroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _optoiongroupid;
		
		private string _optiongroupname;
		
		private EntitySet<option> _options;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoptoiongroupidChanging(int value);
    partial void OnoptoiongroupidChanged();
    partial void OnoptiongroupnameChanging(string value);
    partial void OnoptiongroupnameChanged();
    #endregion
		
		public optiongroup()
		{
			this._options = new EntitySet<option>(new Action<option>(this.attach_options), new Action<option>(this.detach_options));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optoiongroupid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int optoiongroupid
		{
			get
			{
				return this._optoiongroupid;
			}
			set
			{
				if ((this._optoiongroupid != value))
				{
					this.OnoptoiongroupidChanging(value);
					this.SendPropertyChanging();
					this._optoiongroupid = value;
					this.SendPropertyChanged("optoiongroupid");
					this.OnoptoiongroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optiongroupname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string optiongroupname
		{
			get
			{
				return this._optiongroupname;
			}
			set
			{
				if ((this._optiongroupname != value))
				{
					this.OnoptiongroupnameChanging(value);
					this.SendPropertyChanging();
					this._optiongroupname = value;
					this.SendPropertyChanged("optiongroupname");
					this.OnoptiongroupnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="optiongroup_option", Storage="_options", ThisKey="optoiongroupid", OtherKey="optiongroupid")]
		public EntitySet<option> options
		{
			get
			{
				return this._options;
			}
			set
			{
				this._options.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_options(option entity)
		{
			this.SendPropertyChanging();
			entity.optiongroup = this;
		}
		
		private void detach_options(option entity)
		{
			this.SendPropertyChanging();
			entity.optiongroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.options")]
	public partial class option : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _optionid;
		
		private int _optiongroupid;
		
		private string _optionname;
		
		private EntitySet<productoption> _productoptions;
		
		private EntityRef<optiongroup> _optiongroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnoptionidChanging(int value);
    partial void OnoptionidChanged();
    partial void OnoptiongroupidChanging(int value);
    partial void OnoptiongroupidChanged();
    partial void OnoptionnameChanging(string value);
    partial void OnoptionnameChanged();
    #endregion
		
		public option()
		{
			this._productoptions = new EntitySet<productoption>(new Action<productoption>(this.attach_productoptions), new Action<productoption>(this.detach_productoptions));
			this._optiongroup = default(EntityRef<optiongroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optionid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int optionid
		{
			get
			{
				return this._optionid;
			}
			set
			{
				if ((this._optionid != value))
				{
					this.OnoptionidChanging(value);
					this.SendPropertyChanging();
					this._optionid = value;
					this.SendPropertyChanged("optionid");
					this.OnoptionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optiongroupid", DbType="Int NOT NULL")]
		public int optiongroupid
		{
			get
			{
				return this._optiongroupid;
			}
			set
			{
				if ((this._optiongroupid != value))
				{
					if (this._optiongroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoptiongroupidChanging(value);
					this.SendPropertyChanging();
					this._optiongroupid = value;
					this.SendPropertyChanged("optiongroupid");
					this.OnoptiongroupidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optionname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string optionname
		{
			get
			{
				return this._optionname;
			}
			set
			{
				if ((this._optionname != value))
				{
					this.OnoptionnameChanging(value);
					this.SendPropertyChanging();
					this._optionname = value;
					this.SendPropertyChanged("optionname");
					this.OnoptionnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="option_productoption", Storage="_productoptions", ThisKey="optionid", OtherKey="optionid")]
		public EntitySet<productoption> productoptions
		{
			get
			{
				return this._productoptions;
			}
			set
			{
				this._productoptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="optiongroup_option", Storage="_optiongroup", ThisKey="optiongroupid", OtherKey="optoiongroupid", IsForeignKey=true)]
		public optiongroup optiongroup
		{
			get
			{
				return this._optiongroup.Entity;
			}
			set
			{
				optiongroup previousValue = this._optiongroup.Entity;
				if (((previousValue != value) 
							|| (this._optiongroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._optiongroup.Entity = null;
						previousValue.options.Remove(this);
					}
					this._optiongroup.Entity = value;
					if ((value != null))
					{
						value.options.Add(this);
						this._optiongroupid = value.optoiongroupid;
					}
					else
					{
						this._optiongroupid = default(int);
					}
					this.SendPropertyChanged("optiongroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_productoptions(productoption entity)
		{
			this.SendPropertyChanging();
			entity.option = this;
		}
		
		private void detach_productoptions(productoption entity)
		{
			this.SendPropertyChanging();
			entity.option = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orders")]
	public partial class order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderid;
		
		private int _orderuserid;
		
		private double _orderamount;
		
		private string _ordershipname;
		
		private string _ordershipaddress;
		
		private string _ordershipaddress2;
		
		private string _ordercity;
		
		private string _orderstate;
		
		private string _orderzip;
		
		private string _ordercountry;
		
		private string _orderphone;
		
		private string _orderfax;
		
		private double _ordershipping;
		
		private double _ordertax;
		
		private string _orderemail;
		
		private System.DateTime _OrderDate;
		
		private byte _ordershipped;
		
		private string _ordertrackingnumber;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderidChanging(int value);
    partial void OnorderidChanged();
    partial void OnorderuseridChanging(int value);
    partial void OnorderuseridChanged();
    partial void OnorderamountChanging(double value);
    partial void OnorderamountChanged();
    partial void OnordershipnameChanging(string value);
    partial void OnordershipnameChanged();
    partial void OnordershipaddressChanging(string value);
    partial void OnordershipaddressChanged();
    partial void Onordershipaddress2Changing(string value);
    partial void Onordershipaddress2Changed();
    partial void OnordercityChanging(string value);
    partial void OnordercityChanged();
    partial void OnorderstateChanging(string value);
    partial void OnorderstateChanged();
    partial void OnorderzipChanging(string value);
    partial void OnorderzipChanged();
    partial void OnordercountryChanging(string value);
    partial void OnordercountryChanged();
    partial void OnorderphoneChanging(string value);
    partial void OnorderphoneChanged();
    partial void OnorderfaxChanging(string value);
    partial void OnorderfaxChanged();
    partial void OnordershippingChanging(double value);
    partial void OnordershippingChanged();
    partial void OnordertaxChanging(double value);
    partial void OnordertaxChanged();
    partial void OnorderemailChanging(string value);
    partial void OnorderemailChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnordershippedChanging(byte value);
    partial void OnordershippedChanged();
    partial void OnordertrackingnumberChanging(string value);
    partial void OnordertrackingnumberChanged();
    #endregion
		
		public order()
		{
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderuserid", DbType="Int NOT NULL")]
		public int orderuserid
		{
			get
			{
				return this._orderuserid;
			}
			set
			{
				if ((this._orderuserid != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderuseridChanging(value);
					this.SendPropertyChanging();
					this._orderuserid = value;
					this.SendPropertyChanged("orderuserid");
					this.OnorderuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderamount", DbType="Float NOT NULL")]
		public double orderamount
		{
			get
			{
				return this._orderamount;
			}
			set
			{
				if ((this._orderamount != value))
				{
					this.OnorderamountChanging(value);
					this.SendPropertyChanging();
					this._orderamount = value;
					this.SendPropertyChanged("orderamount");
					this.OnorderamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordershipname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ordershipname
		{
			get
			{
				return this._ordershipname;
			}
			set
			{
				if ((this._ordershipname != value))
				{
					this.OnordershipnameChanging(value);
					this.SendPropertyChanging();
					this._ordershipname = value;
					this.SendPropertyChanged("ordershipname");
					this.OnordershipnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordershipaddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ordershipaddress
		{
			get
			{
				return this._ordershipaddress;
			}
			set
			{
				if ((this._ordershipaddress != value))
				{
					this.OnordershipaddressChanging(value);
					this.SendPropertyChanging();
					this._ordershipaddress = value;
					this.SendPropertyChanged("ordershipaddress");
					this.OnordershipaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordershipaddress2", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ordershipaddress2
		{
			get
			{
				return this._ordershipaddress2;
			}
			set
			{
				if ((this._ordershipaddress2 != value))
				{
					this.Onordershipaddress2Changing(value);
					this.SendPropertyChanging();
					this._ordershipaddress2 = value;
					this.SendPropertyChanged("ordershipaddress2");
					this.Onordershipaddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordercity", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ordercity
		{
			get
			{
				return this._ordercity;
			}
			set
			{
				if ((this._ordercity != value))
				{
					this.OnordercityChanging(value);
					this.SendPropertyChanging();
					this._ordercity = value;
					this.SendPropertyChanged("ordercity");
					this.OnordercityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderstate", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string orderstate
		{
			get
			{
				return this._orderstate;
			}
			set
			{
				if ((this._orderstate != value))
				{
					this.OnorderstateChanging(value);
					this.SendPropertyChanging();
					this._orderstate = value;
					this.SendPropertyChanged("orderstate");
					this.OnorderstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderzip", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string orderzip
		{
			get
			{
				return this._orderzip;
			}
			set
			{
				if ((this._orderzip != value))
				{
					this.OnorderzipChanging(value);
					this.SendPropertyChanging();
					this._orderzip = value;
					this.SendPropertyChanged("orderzip");
					this.OnorderzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordercountry", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ordercountry
		{
			get
			{
				return this._ordercountry;
			}
			set
			{
				if ((this._ordercountry != value))
				{
					this.OnordercountryChanging(value);
					this.SendPropertyChanging();
					this._ordercountry = value;
					this.SendPropertyChanged("ordercountry");
					this.OnordercountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderphone", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string orderphone
		{
			get
			{
				return this._orderphone;
			}
			set
			{
				if ((this._orderphone != value))
				{
					this.OnorderphoneChanging(value);
					this.SendPropertyChanging();
					this._orderphone = value;
					this.SendPropertyChanged("orderphone");
					this.OnorderphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderfax", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string orderfax
		{
			get
			{
				return this._orderfax;
			}
			set
			{
				if ((this._orderfax != value))
				{
					this.OnorderfaxChanging(value);
					this.SendPropertyChanging();
					this._orderfax = value;
					this.SendPropertyChanged("orderfax");
					this.OnorderfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordershipping", DbType="Float NOT NULL")]
		public double ordershipping
		{
			get
			{
				return this._ordershipping;
			}
			set
			{
				if ((this._ordershipping != value))
				{
					this.OnordershippingChanging(value);
					this.SendPropertyChanging();
					this._ordershipping = value;
					this.SendPropertyChanged("ordershipping");
					this.OnordershippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordertax", DbType="Float NOT NULL")]
		public double ordertax
		{
			get
			{
				return this._ordertax;
			}
			set
			{
				if ((this._ordertax != value))
				{
					this.OnordertaxChanging(value);
					this.SendPropertyChanging();
					this._ordertax = value;
					this.SendPropertyChanged("ordertax");
					this.OnordertaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderemail", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string orderemail
		{
			get
			{
				return this._orderemail;
			}
			set
			{
				if ((this._orderemail != value))
				{
					this.OnorderemailChanging(value);
					this.SendPropertyChanging();
					this._orderemail = value;
					this.SendPropertyChanged("orderemail");
					this.OnorderemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordershipped", DbType="TinyInt NOT NULL")]
		public byte ordershipped
		{
			get
			{
				return this._ordershipped;
			}
			set
			{
				if ((this._ordershipped != value))
				{
					this.OnordershippedChanging(value);
					this.SendPropertyChanging();
					this._ordershipped = value;
					this.SendPropertyChanged("ordershipped");
					this.OnordershippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ordertrackingnumber", DbType="VarChar(80)")]
		public string ordertrackingnumber
		{
			get
			{
				return this._ordertrackingnumber;
			}
			set
			{
				if ((this._ordertrackingnumber != value))
				{
					this.OnordertrackingnumberChanging(value);
					this.SendPropertyChanging();
					this._ordertrackingnumber = value;
					this.SendPropertyChanged("ordertrackingnumber");
					this.OnordertrackingnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_user", ThisKey="orderuserid", OtherKey="userid", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.orders.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.orders.Add(this);
						this._orderuserid = value.userid;
					}
					else
					{
						this._orderuserid = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.productcatogeries")]
	public partial class productcatogery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _categoryid;
		
		private string _categoryname;
		
		private EntitySet<product> _products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void OncategorynameChanging(string value);
    partial void OncategorynameChanged();
    #endregion
		
		public productcatogery()
		{
			this._products = new EntitySet<product>(new Action<product>(this.attach_products), new Action<product>(this.detach_products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string categoryname
		{
			get
			{
				return this._categoryname;
			}
			set
			{
				if ((this._categoryname != value))
				{
					this.OncategorynameChanging(value);
					this.SendPropertyChanging();
					this._categoryname = value;
					this.SendPropertyChanged("categoryname");
					this.OncategorynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productcatogery_product", Storage="_products", ThisKey="categoryid", OtherKey="productcategoryid")]
		public EntitySet<product> products
		{
			get
			{
				return this._products;
			}
			set
			{
				this._products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.productcatogery = this;
		}
		
		private void detach_products(product entity)
		{
			this.SendPropertyChanging();
			entity.productcatogery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.productoptions")]
	public partial class productoption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productoptionid;
		
		private int _productid;
		
		private int _optionid;
		
		private System.Nullable<double> _optionpriceincrement;
		
		private EntityRef<option> _option;
		
		private EntityRef<product> _product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductoptionidChanging(int value);
    partial void OnproductoptionidChanged();
    partial void OnproductidChanging(int value);
    partial void OnproductidChanged();
    partial void OnoptionidChanging(int value);
    partial void OnoptionidChanged();
    partial void OnoptionpriceincrementChanging(System.Nullable<double> value);
    partial void OnoptionpriceincrementChanged();
    #endregion
		
		public productoption()
		{
			this._option = default(EntityRef<option>);
			this._product = default(EntityRef<product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productoptionid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productoptionid
		{
			get
			{
				return this._productoptionid;
			}
			set
			{
				if ((this._productoptionid != value))
				{
					this.OnproductoptionidChanging(value);
					this.SendPropertyChanging();
					this._productoptionid = value;
					this.SendPropertyChanged("productoptionid");
					this.OnproductoptionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="Int NOT NULL")]
		public int productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optionid", DbType="Int NOT NULL")]
		public int optionid
		{
			get
			{
				return this._optionid;
			}
			set
			{
				if ((this._optionid != value))
				{
					if (this._option.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnoptionidChanging(value);
					this.SendPropertyChanging();
					this._optionid = value;
					this.SendPropertyChanged("optionid");
					this.OnoptionidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_optionpriceincrement", DbType="Float")]
		public System.Nullable<double> optionpriceincrement
		{
			get
			{
				return this._optionpriceincrement;
			}
			set
			{
				if ((this._optionpriceincrement != value))
				{
					this.OnoptionpriceincrementChanging(value);
					this.SendPropertyChanging();
					this._optionpriceincrement = value;
					this.SendPropertyChanged("optionpriceincrement");
					this.OnoptionpriceincrementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="option_productoption", Storage="_option", ThisKey="optionid", OtherKey="optionid", IsForeignKey=true)]
		public option option
		{
			get
			{
				return this._option.Entity;
			}
			set
			{
				option previousValue = this._option.Entity;
				if (((previousValue != value) 
							|| (this._option.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._option.Entity = null;
						previousValue.productoptions.Remove(this);
					}
					this._option.Entity = value;
					if ((value != null))
					{
						value.productoptions.Add(this);
						this._optionid = value.optionid;
					}
					else
					{
						this._optionid = default(int);
					}
					this.SendPropertyChanged("option");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_productoption", Storage="_product", ThisKey="productid", OtherKey="productid", IsForeignKey=true)]
		public product product
		{
			get
			{
				return this._product.Entity;
			}
			set
			{
				product previousValue = this._product.Entity;
				if (((previousValue != value) 
							|| (this._product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._product.Entity = null;
						previousValue.productoptions.Remove(this);
					}
					this._product.Entity = value;
					if ((value != null))
					{
						value.productoptions.Add(this);
						this._productid = value.productid;
					}
					else
					{
						this._productid = default(int);
					}
					this.SendPropertyChanged("product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.products")]
	public partial class product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productid;
		
		private string _productsku;
		
		private string _productname;
		
		private double _productprice;
		
		private double _productweight;
		
		private string _productcartdesc;
		
		private string _productshortdesc;
		
		private string _productlongdesc;
		
		private string _productthumb;
		
		private string _productimage;
		
		private System.Nullable<int> _productcategoryid;
		
		private System.Nullable<int> _productstock;
		
		private System.Nullable<byte> _productlive;
		
		private System.Nullable<byte> _productunlimited;
		
		private string _productlocation;
		
		private EntitySet<productoption> _productoptions;
		
		private EntityRef<productcatogery> _productcatogery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductidChanging(int value);
    partial void OnproductidChanged();
    partial void OnproductskuChanging(string value);
    partial void OnproductskuChanged();
    partial void OnproductnameChanging(string value);
    partial void OnproductnameChanged();
    partial void OnproductpriceChanging(double value);
    partial void OnproductpriceChanged();
    partial void OnproductweightChanging(double value);
    partial void OnproductweightChanged();
    partial void OnproductcartdescChanging(string value);
    partial void OnproductcartdescChanged();
    partial void OnproductshortdescChanging(string value);
    partial void OnproductshortdescChanged();
    partial void OnproductlongdescChanging(string value);
    partial void OnproductlongdescChanged();
    partial void OnproductthumbChanging(string value);
    partial void OnproductthumbChanged();
    partial void OnproductimageChanging(string value);
    partial void OnproductimageChanged();
    partial void OnproductcategoryidChanging(System.Nullable<int> value);
    partial void OnproductcategoryidChanged();
    partial void OnproductstockChanging(System.Nullable<int> value);
    partial void OnproductstockChanged();
    partial void OnproductliveChanging(System.Nullable<byte> value);
    partial void OnproductliveChanged();
    partial void OnproductunlimitedChanging(System.Nullable<byte> value);
    partial void OnproductunlimitedChanged();
    partial void OnproductlocationChanging(string value);
    partial void OnproductlocationChanged();
    #endregion
		
		public product()
		{
			this._productoptions = new EntitySet<productoption>(new Action<productoption>(this.attach_productoptions), new Action<productoption>(this.detach_productoptions));
			this._productcatogery = default(EntityRef<productcatogery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productsku", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string productsku
		{
			get
			{
				return this._productsku;
			}
			set
			{
				if ((this._productsku != value))
				{
					this.OnproductskuChanging(value);
					this.SendPropertyChanging();
					this._productsku = value;
					this.SendPropertyChanged("productsku");
					this.OnproductskuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productname", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string productname
		{
			get
			{
				return this._productname;
			}
			set
			{
				if ((this._productname != value))
				{
					this.OnproductnameChanging(value);
					this.SendPropertyChanging();
					this._productname = value;
					this.SendPropertyChanged("productname");
					this.OnproductnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productprice", DbType="Float NOT NULL")]
		public double productprice
		{
			get
			{
				return this._productprice;
			}
			set
			{
				if ((this._productprice != value))
				{
					this.OnproductpriceChanging(value);
					this.SendPropertyChanging();
					this._productprice = value;
					this.SendPropertyChanged("productprice");
					this.OnproductpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productweight", DbType="Float NOT NULL")]
		public double productweight
		{
			get
			{
				return this._productweight;
			}
			set
			{
				if ((this._productweight != value))
				{
					this.OnproductweightChanging(value);
					this.SendPropertyChanging();
					this._productweight = value;
					this.SendPropertyChanged("productweight");
					this.OnproductweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productcartdesc", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string productcartdesc
		{
			get
			{
				return this._productcartdesc;
			}
			set
			{
				if ((this._productcartdesc != value))
				{
					this.OnproductcartdescChanging(value);
					this.SendPropertyChanging();
					this._productcartdesc = value;
					this.SendPropertyChanged("productcartdesc");
					this.OnproductcartdescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productshortdesc", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string productshortdesc
		{
			get
			{
				return this._productshortdesc;
			}
			set
			{
				if ((this._productshortdesc != value))
				{
					this.OnproductshortdescChanging(value);
					this.SendPropertyChanging();
					this._productshortdesc = value;
					this.SendPropertyChanged("productshortdesc");
					this.OnproductshortdescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productlongdesc", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string productlongdesc
		{
			get
			{
				return this._productlongdesc;
			}
			set
			{
				if ((this._productlongdesc != value))
				{
					this.OnproductlongdescChanging(value);
					this.SendPropertyChanging();
					this._productlongdesc = value;
					this.SendPropertyChanged("productlongdesc");
					this.OnproductlongdescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productthumb", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string productthumb
		{
			get
			{
				return this._productthumb;
			}
			set
			{
				if ((this._productthumb != value))
				{
					this.OnproductthumbChanging(value);
					this.SendPropertyChanging();
					this._productthumb = value;
					this.SendPropertyChanged("productthumb");
					this.OnproductthumbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productimage", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string productimage
		{
			get
			{
				return this._productimage;
			}
			set
			{
				if ((this._productimage != value))
				{
					this.OnproductimageChanging(value);
					this.SendPropertyChanging();
					this._productimage = value;
					this.SendPropertyChanged("productimage");
					this.OnproductimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productcategoryid", DbType="Int")]
		public System.Nullable<int> productcategoryid
		{
			get
			{
				return this._productcategoryid;
			}
			set
			{
				if ((this._productcategoryid != value))
				{
					if (this._productcatogery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductcategoryidChanging(value);
					this.SendPropertyChanging();
					this._productcategoryid = value;
					this.SendPropertyChanged("productcategoryid");
					this.OnproductcategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productstock", DbType="Int")]
		public System.Nullable<int> productstock
		{
			get
			{
				return this._productstock;
			}
			set
			{
				if ((this._productstock != value))
				{
					this.OnproductstockChanging(value);
					this.SendPropertyChanging();
					this._productstock = value;
					this.SendPropertyChanged("productstock");
					this.OnproductstockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productlive", DbType="TinyInt")]
		public System.Nullable<byte> productlive
		{
			get
			{
				return this._productlive;
			}
			set
			{
				if ((this._productlive != value))
				{
					this.OnproductliveChanging(value);
					this.SendPropertyChanging();
					this._productlive = value;
					this.SendPropertyChanged("productlive");
					this.OnproductliveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productunlimited", DbType="TinyInt")]
		public System.Nullable<byte> productunlimited
		{
			get
			{
				return this._productunlimited;
			}
			set
			{
				if ((this._productunlimited != value))
				{
					this.OnproductunlimitedChanging(value);
					this.SendPropertyChanging();
					this._productunlimited = value;
					this.SendPropertyChanged("productunlimited");
					this.OnproductunlimitedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productlocation", DbType="VarChar(250)")]
		public string productlocation
		{
			get
			{
				return this._productlocation;
			}
			set
			{
				if ((this._productlocation != value))
				{
					this.OnproductlocationChanging(value);
					this.SendPropertyChanging();
					this._productlocation = value;
					this.SendPropertyChanged("productlocation");
					this.OnproductlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="product_productoption", Storage="_productoptions", ThisKey="productid", OtherKey="productid")]
		public EntitySet<productoption> productoptions
		{
			get
			{
				return this._productoptions;
			}
			set
			{
				this._productoptions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="productcatogery_product", Storage="_productcatogery", ThisKey="productcategoryid", OtherKey="categoryid", IsForeignKey=true)]
		public productcatogery productcatogery
		{
			get
			{
				return this._productcatogery.Entity;
			}
			set
			{
				productcatogery previousValue = this._productcatogery.Entity;
				if (((previousValue != value) 
							|| (this._productcatogery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._productcatogery.Entity = null;
						previousValue.products.Remove(this);
					}
					this._productcatogery.Entity = value;
					if ((value != null))
					{
						value.products.Add(this);
						this._productcategoryid = value.categoryid;
					}
					else
					{
						this._productcategoryid = default(Nullable<int>);
					}
					this.SendPropertyChanged("productcatogery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_productoptions(productoption entity)
		{
			this.SendPropertyChanging();
			entity.product = this;
		}
		
		private void detach_productoptions(productoption entity)
		{
			this.SendPropertyChanging();
			entity.product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _useremail;
		
		private string _userpassword;
		
		private string _userfirstname;
		
		private string _userlastname;
		
		private string _usercity;
		
		private string _userstate;
		
		private string _userzip;
		
		private System.Nullable<byte> _useremailverified;
		
		private string _userverificationcode;
		
		private string _userip;
		
		private string _userphone;
		
		private string _userfax;
		
		private string _usercountry;
		
		private string _useraddress;
		
		private string _useraddress2;
		
		private EntitySet<order> _orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnuseremailChanging(string value);
    partial void OnuseremailChanged();
    partial void OnuserpasswordChanging(string value);
    partial void OnuserpasswordChanged();
    partial void OnuserfirstnameChanging(string value);
    partial void OnuserfirstnameChanged();
    partial void OnuserlastnameChanging(string value);
    partial void OnuserlastnameChanged();
    partial void OnusercityChanging(string value);
    partial void OnusercityChanged();
    partial void OnuserstateChanging(string value);
    partial void OnuserstateChanged();
    partial void OnuserzipChanging(string value);
    partial void OnuserzipChanged();
    partial void OnuseremailverifiedChanging(System.Nullable<byte> value);
    partial void OnuseremailverifiedChanged();
    partial void OnuserverificationcodeChanging(string value);
    partial void OnuserverificationcodeChanged();
    partial void OnuseripChanging(string value);
    partial void OnuseripChanged();
    partial void OnuserphoneChanging(string value);
    partial void OnuserphoneChanged();
    partial void OnuserfaxChanging(string value);
    partial void OnuserfaxChanged();
    partial void OnusercountryChanging(string value);
    partial void OnusercountryChanged();
    partial void OnuseraddressChanging(string value);
    partial void OnuseraddressChanged();
    partial void Onuseraddress2Changing(string value);
    partial void Onuseraddress2Changed();
    #endregion
		
		public user()
		{
			this._orders = new EntitySet<order>(new Action<order>(this.attach_orders), new Action<order>(this.detach_orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useremail", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string useremail
		{
			get
			{
				return this._useremail;
			}
			set
			{
				if ((this._useremail != value))
				{
					this.OnuseremailChanging(value);
					this.SendPropertyChanging();
					this._useremail = value;
					this.SendPropertyChanged("useremail");
					this.OnuseremailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userpassword", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string userpassword
		{
			get
			{
				return this._userpassword;
			}
			set
			{
				if ((this._userpassword != value))
				{
					this.OnuserpasswordChanging(value);
					this.SendPropertyChanging();
					this._userpassword = value;
					this.SendPropertyChanged("userpassword");
					this.OnuserpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userfirstname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userfirstname
		{
			get
			{
				return this._userfirstname;
			}
			set
			{
				if ((this._userfirstname != value))
				{
					this.OnuserfirstnameChanging(value);
					this.SendPropertyChanging();
					this._userfirstname = value;
					this.SendPropertyChanged("userfirstname");
					this.OnuserfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userlastname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string userlastname
		{
			get
			{
				return this._userlastname;
			}
			set
			{
				if ((this._userlastname != value))
				{
					this.OnuserlastnameChanging(value);
					this.SendPropertyChanging();
					this._userlastname = value;
					this.SendPropertyChanged("userlastname");
					this.OnuserlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usercity", DbType="VarChar(90) NOT NULL", CanBeNull=false)]
		public string usercity
		{
			get
			{
				return this._usercity;
			}
			set
			{
				if ((this._usercity != value))
				{
					this.OnusercityChanging(value);
					this.SendPropertyChanging();
					this._usercity = value;
					this.SendPropertyChanged("usercity");
					this.OnusercityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userstate", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string userstate
		{
			get
			{
				return this._userstate;
			}
			set
			{
				if ((this._userstate != value))
				{
					this.OnuserstateChanging(value);
					this.SendPropertyChanging();
					this._userstate = value;
					this.SendPropertyChanged("userstate");
					this.OnuserstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userzip", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string userzip
		{
			get
			{
				return this._userzip;
			}
			set
			{
				if ((this._userzip != value))
				{
					this.OnuserzipChanging(value);
					this.SendPropertyChanging();
					this._userzip = value;
					this.SendPropertyChanged("userzip");
					this.OnuserzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useremailverified", DbType="TinyInt")]
		public System.Nullable<byte> useremailverified
		{
			get
			{
				return this._useremailverified;
			}
			set
			{
				if ((this._useremailverified != value))
				{
					this.OnuseremailverifiedChanging(value);
					this.SendPropertyChanging();
					this._useremailverified = value;
					this.SendPropertyChanged("useremailverified");
					this.OnuseremailverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userverificationcode", DbType="VarChar(20)")]
		public string userverificationcode
		{
			get
			{
				return this._userverificationcode;
			}
			set
			{
				if ((this._userverificationcode != value))
				{
					this.OnuserverificationcodeChanging(value);
					this.SendPropertyChanging();
					this._userverificationcode = value;
					this.SendPropertyChanged("userverificationcode");
					this.OnuserverificationcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userip", DbType="VarChar(50)")]
		public string userip
		{
			get
			{
				return this._userip;
			}
			set
			{
				if ((this._userip != value))
				{
					this.OnuseripChanging(value);
					this.SendPropertyChanging();
					this._userip = value;
					this.SendPropertyChanged("userip");
					this.OnuseripChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userphone", DbType="VarChar(20)")]
		public string userphone
		{
			get
			{
				return this._userphone;
			}
			set
			{
				if ((this._userphone != value))
				{
					this.OnuserphoneChanging(value);
					this.SendPropertyChanging();
					this._userphone = value;
					this.SendPropertyChanged("userphone");
					this.OnuserphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userfax", DbType="VarChar(20)")]
		public string userfax
		{
			get
			{
				return this._userfax;
			}
			set
			{
				if ((this._userfax != value))
				{
					this.OnuserfaxChanging(value);
					this.SendPropertyChanging();
					this._userfax = value;
					this.SendPropertyChanged("userfax");
					this.OnuserfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usercountry", DbType="VarChar(20)")]
		public string usercountry
		{
			get
			{
				return this._usercountry;
			}
			set
			{
				if ((this._usercountry != value))
				{
					this.OnusercountryChanging(value);
					this.SendPropertyChanging();
					this._usercountry = value;
					this.SendPropertyChanged("usercountry");
					this.OnusercountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useraddress", DbType="VarChar(100)")]
		public string useraddress
		{
			get
			{
				return this._useraddress;
			}
			set
			{
				if ((this._useraddress != value))
				{
					this.OnuseraddressChanging(value);
					this.SendPropertyChanging();
					this._useraddress = value;
					this.SendPropertyChanged("useraddress");
					this.OnuseraddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useraddress2", DbType="VarChar(50)")]
		public string useraddress2
		{
			get
			{
				return this._useraddress2;
			}
			set
			{
				if ((this._useraddress2 != value))
				{
					this.Onuseraddress2Changing(value);
					this.SendPropertyChanging();
					this._useraddress2 = value;
					this.SendPropertyChanged("useraddress2");
					this.Onuseraddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_order", Storage="_orders", ThisKey="userid", OtherKey="orderuserid")]
		public EntitySet<order> orders
		{
			get
			{
				return this._orders;
			}
			set
			{
				this._orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_orders(order entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
}
#pragma warning restore 1591
